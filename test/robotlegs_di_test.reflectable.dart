// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'objects/objects.dart' as prefix1;
import 'package:robotlegs_di/src/reflection/annotations.dart' as prefix2;
import 'package:robotlegs_di/src/reflection/reflector.dart' as prefix0;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {
  const prefix0.Reflect(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"AbstractClazz",
            r".AbstractClazz",
            519,
            0,
            const prefix0.Reflect(),
            const <int>[31],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            20,
            {},
            {},
            {},
            0,
            0,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Clazz",
            r".Clazz",
            7,
            1,
            const prefix0.Reflect(),
            const <int>[
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              83,
              84,
              85
            ],
            const <int>[
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84
            ],
            const <int>[],
            21,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.Clazz() : null},
            0,
            1,
            const <int>[4],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"ClazzTwo",
            r".ClazzTwo",
            7,
            2,
            const prefix0.Reflect(),
            const <int>[19, 88, 89],
            const <int>[32, 33, 34, 35, 36, 86, 87],
            const <int>[],
            20,
            {},
            {},
            {
              r"": (b) => (_injectedString) =>
                  b ? new prefix1.ClazzTwo(_injectedString) : null,
              r"named": (b) => () => b ? new prefix1.ClazzTwo.named() : null
            },
            0,
            2,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"InjectedClazz",
            r".InjectedClazz",
            7,
            3,
            const prefix0.Reflect(),
            const <int>[90],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.InjectedClazz() : null},
            0,
            3,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"InterfaceClazz",
            r".InterfaceClazz",
            519,
            4,
            const prefix0.Reflect(),
            const <int>[91],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            20,
            {},
            {},
            {},
            0,
            4,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"MixinClazz",
            r".MixinClazz",
            519,
            5,
            const prefix0.Reflect(),
            const <int>[92],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            20,
            {},
            {},
            {},
            0,
            5,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"ValueHolder",
            r".ValueHolder",
            7,
            6,
            const prefix0.Reflect(),
            const <int>[20, 94],
            const <int>[32, 33, 34, 35, 36, 93],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => (value) => b ? new prefix1.ValueHolder(value) : null},
            0,
            6,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"ValueHolderInjectee",
            r".ValueHolderInjectee",
            7,
            7,
            const prefix0.Reflect(),
            const <int>[21, 97],
            const <int>[32, 33, 34, 35, 36, 95, 96],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.ValueHolderInjectee() : null},
            0,
            7,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"RandomNumberInjectee",
            r".RandomNumberInjectee",
            7,
            8,
            const prefix0.Reflect(),
            const <int>[22, 100],
            const <int>[32, 33, 34, 35, 36, 98, 99],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.RandomNumberInjectee() : null},
            0,
            8,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"RandomNumberHolder",
            r".RandomNumberHolder",
            7,
            9,
            const prefix0.Reflect(),
            const <int>[23, 102],
            const <int>[32, 33, 34, 35, 36, 101],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.RandomNumberHolder() : null},
            0,
            9,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"InterfaceInjectee",
            r".InterfaceInjectee",
            7,
            10,
            const prefix0.Reflect(),
            const <int>[24, 105],
            const <int>[32, 33, 34, 35, 36, 103, 104],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.InterfaceInjectee() : null},
            0,
            10,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"NamedInterfaceInjectee",
            r".NamedInterfaceInjectee",
            7,
            11,
            const prefix0.Reflect(),
            const <int>[25, 108],
            const <int>[32, 33, 34, 35, 36, 106, 107],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.NamedInterfaceInjectee() : null},
            0,
            11,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"RecursiveInterfaceInjectee",
            r".RecursiveInterfaceInjectee",
            7,
            12,
            const prefix0.Reflect(),
            const <int>[26, 111],
            const <int>[32, 33, 34, 35, 36, 109, 110],
            const <int>[],
            20,
            {},
            {},
            {
              r"": (b) =>
                  () => b ? new prefix1.RecursiveInterfaceInjectee() : null
            },
            0,
            12,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"MultipleSingletonsOfSameClassInjectee",
            r".MultipleSingletonsOfSameClassInjectee",
            7,
            13,
            const prefix0.Reflect(),
            const <int>[27, 28, 116],
            const <int>[32, 33, 34, 35, 36, 112, 113, 114, 115],
            const <int>[],
            20,
            {},
            {},
            {
              r"": (b) => () =>
                  b ? new prefix1.MultipleSingletonsOfSameClassInjectee() : null
            },
            0,
            13,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"ComplexClassInjectee",
            r".ComplexClassInjectee",
            7,
            14,
            const prefix0.Reflect(),
            const <int>[29, 119],
            const <int>[32, 33, 34, 35, 36, 117, 118],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.ComplexClassInjectee() : null},
            0,
            14,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"ComplexClass",
            r".ComplexClass",
            7,
            15,
            const prefix0.Reflect(),
            const <int>[30, 122],
            const <int>[32, 33, 34, 35, 36, 120, 121],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.ComplexClass() : null},
            0,
            15,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Interface",
            r".Interface",
            519,
            16,
            const prefix0.Reflect(),
            const <int>[123],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            20,
            {},
            {},
            {},
            0,
            16,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Interface2",
            r".Interface2",
            519,
            17,
            const prefix0.Reflect(),
            const <int>[124],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            20,
            {},
            {},
            {},
            0,
            17,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"ImplementationOfInterface",
            r".ImplementationOfInterface",
            7,
            18,
            const prefix0.Reflect(),
            const <int>[125],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            20,
            {},
            {},
            {
              r"": (b) =>
                  () => b ? new prefix1.ImplementationOfInterface() : null
            },
            0,
            18,
            const <int>[16, 17],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"SuperClazz",
            r".SuperClazz",
            7,
            19,
            const prefix0.Reflect(),
            const <int>[126],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            22,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.SuperClazz() : null},
            0,
            19,
            const <int>[],
            const <Object>[const prefix0.Reflect()],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Object",
            r"dart.core.Object",
            7,
            20,
            const prefix0.Reflect(),
            const <int>[32, 33, 34, 35, 36, 127],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            null,
            {},
            {},
            {r"": (b) => () => b ? new Object() : null},
            1,
            20,
            const <int>[],
            const <Object>[],
            null),
        new r.NonGenericClassMirrorImpl(
            r".AbstractClazz with .MixinClazz",
            r"..AbstractClazz with .MixinClazz",
            583,
            21,
            const prefix0.Reflect(),
            const <int>[],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            0,
            const {},
            const {},
            const {},
            0,
            5,
            const <int>[],
            const [],
            null),
        new r.NonGenericClassMirrorImpl(
            r"BaseClazz",
            r".BaseClazz",
            7,
            22,
            const prefix0.Reflect(),
            const <int>[128],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            23,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.BaseClazz() : null},
            0,
            22,
            const <int>[],
            const <Object>[],
            null),
        new r.NonGenericClassMirrorImpl(
            r"AbstractBaseClazz",
            r".AbstractBaseClazz",
            7,
            23,
            const prefix0.Reflect(),
            const <int>[129],
            const <int>[32, 33, 34, 35, 36],
            const <int>[],
            20,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.AbstractBaseClazz() : null},
            0,
            23,
            const <int>[],
            const <Object>[],
            null)
      ],
      <m.DeclarationMirror>[
        new r.VariableMirrorImpl(r"myInjectedValueHolder", 32773, 1,
            const prefix0.Reflect(), 6, -1, -1, const <Object>[prefix2.inject]),
        new r.VariableMirrorImpl(r"myInjectedHelloValueHolder", 32773, 1,
            const prefix0.Reflect(), 6, -1, -1, const <Object>[
          const prefix2.Inject(name: 'hello', optional: true)
        ]),
        new r.VariableMirrorImpl(r"myInjectedClazz", 32773, 1,
            const prefix0.Reflect(), 3, -1, -1, const <Object>[prefix2.inject]),
        new r.VariableMirrorImpl(r"hasRunFirstMethod", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"firstMethodWithParametersValue", 32773, 1,
            const prefix0.Reflect(), 3, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"postConstructOrder", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"hasRunFirstPostConstructMethod", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"firstPostConstructMethodOrder", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"hasRunSecondPostConstructMethod", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"secondPostConstructMethodOrder", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"hasRunLastPostConstructMethod", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"lastPostConstructMethodOrder", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"preDestroyOrder", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"hasRunFirstPreDestroyMethod", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"firstPreDestroytMethodOrder", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"hasRunSecondPreDestroyMethod", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"secondPreDestroytMethodOrder", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"hasRunLastPreDestroyMethod", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"lastPreDestroytMethodOrder", 32773, 1,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"valueHolder", 32773, 2,
            const prefix0.Reflect(), 6, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(r"value", 33797, 6, const prefix0.Reflect(),
            -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(
            r"valueHolder",
            32773,
            7,
            const prefix0.Reflect(),
            6,
            -1,
            -1,
            const <Object>[const prefix2.Inject()]),
        new r.VariableMirrorImpl(
            r"randomNumberHolder",
            32773,
            8,
            const prefix0.Reflect(),
            9,
            -1,
            -1,
            const <Object>[const prefix2.Inject()]),
        new r.VariableMirrorImpl(r"randomNumber", 33797, 9,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[]),
        new r.VariableMirrorImpl(
            r"interface",
            32773,
            10,
            const prefix0.Reflect(),
            16,
            -1,
            -1,
            const <Object>[prefix2.inject]),
        new r.VariableMirrorImpl(
            r"interface",
            32773,
            11,
            const prefix0.Reflect(),
            16,
            -1,
            -1,
            const <Object>[const prefix2.Inject(name: "name")]),
        new r.VariableMirrorImpl(
            r"interface",
            32773,
            12,
            const prefix0.Reflect(),
            10,
            -1,
            -1,
            const <Object>[const prefix2.Inject()]),
        new r.VariableMirrorImpl(
            r"interface",
            32773,
            13,
            const prefix0.Reflect(),
            16,
            -1,
            -1,
            const <Object>[const prefix2.Inject()]),
        new r.VariableMirrorImpl(
            r"interface2",
            32773,
            13,
            const prefix0.Reflect(),
            17,
            -1,
            -1,
            const <Object>[const prefix2.Inject()]),
        new r.VariableMirrorImpl(
            r"complexClass",
            32773,
            14,
            const prefix0.Reflect(),
            15,
            -1,
            -1,
            const <Object>[prefix2.inject]),
        new r.VariableMirrorImpl(r"injectedClazz", 32773, 15,
            const prefix0.Reflect(), 3, -1, -1, const <Object>[prefix2.inject]),
        new r.MethodMirrorImpl(r"", 64, 0, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"==", 131074, 20, -1, -1, -1, const <int>[0],
            const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(r"toString", 131074, 20, -1, -1, -1,
            const <int>[], const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(r"noSuchMethod", 65538, 20, null, -1, -1,
            const <int>[1], const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(r"hashCode", 131075, 20, -1, -1, -1,
            const <int>[], const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(r"runtimeType", 131075, 20, -1, -1, -1,
            const <int>[], const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(
            r"firstMethod",
            65538,
            1,
            null,
            -1,
            -1,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[prefix2.inject]),
        new r.MethodMirrorImpl(
            r"firstMethodWithParameters",
            65538,
            1,
            null,
            -1,
            -1,
            const <int>[2],
            const prefix0.Reflect(),
            const <Object>[prefix2.inject]),
        new r.MethodMirrorImpl(
            r"firstPostConstructMethod",
            65538,
            1,
            null,
            -1,
            -1,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[const prefix2.PostConstruct(order: 1)]),
        new r.MethodMirrorImpl(
            r"secondPostConstructMethod",
            65538,
            1,
            null,
            -1,
            -1,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[const prefix2.PostConstruct(order: 2)]),
        new r.MethodMirrorImpl(
            r"lastPostConstructMethod",
            65538,
            1,
            null,
            -1,
            -1,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[prefix2.postConstruct]),
        new r.MethodMirrorImpl(
            r"firstPreDestroyMethod",
            65538,
            1,
            null,
            -1,
            -1,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[const prefix2.PreDestroy(order: 1)]),
        new r.MethodMirrorImpl(
            r"secondPreDestroyMethod",
            65538,
            1,
            null,
            -1,
            -1,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[const prefix2.PreDestroy(order: 2)]),
        new r.MethodMirrorImpl(
            r"lastPreDestroyMethod",
            65538,
            1,
            null,
            -1,
            -1,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[prefix2.preDestroy]),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 0, -1, -1, 45),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 0, -1, -1, 46),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 1, -1, -1, 47),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 1, -1, -1, 48),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 2, -1, -1, 49),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 2, -1, -1, 50),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 3, -1, -1, 51),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 3, -1, -1, 52),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 4, -1, -1, 53),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 4, -1, -1, 54),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 5, -1, -1, 55),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 5, -1, -1, 56),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 6, -1, -1, 57),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 6, -1, -1, 58),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 7, -1, -1, 59),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 7, -1, -1, 60),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 8, -1, -1, 61),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 8, -1, -1, 62),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 9, -1, -1, 63),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 9, -1, -1, 64),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 10, -1, -1, 65),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 10, -1, -1, 66),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 11, -1, -1, 67),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 11, -1, -1, 68),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 12, -1, -1, 69),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 12, -1, -1, 70),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 13, -1, -1, 71),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 13, -1, -1, 72),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 14, -1, -1, 73),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 14, -1, -1, 74),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 15, -1, -1, 75),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 15, -1, -1, 76),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 16, -1, -1, 77),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 16, -1, -1, 78),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 17, -1, -1, 79),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 17, -1, -1, 80),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 18, -1, -1, 81),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 18, -1, -1, 82),
        new r.MethodMirrorImpl(
            r"mySetterInjectedValueHolder=",
            65540,
            1,
            null,
            -1,
            -1,
            const <int>[22],
            const prefix0.Reflect(),
            const <Object>[prefix2.inject]),
        new r.MethodMirrorImpl(r"mySetterInjectedValueHolder", 131075, 1, 6, -1,
            -1, const <int>[], const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(r"", 0, 1, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const <Object>[]),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 19, -1, -1, 86),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 19, -1, -1, 87),
        new r.MethodMirrorImpl(r"", 0, 2, -1, -1, -1, const <int>[23],
            const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(r"named", 0, 2, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(r"", 64, 3, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"", 64, 4, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"", 64, 5, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 20, -1, -1, 93),
        new r.MethodMirrorImpl(r"", 128, 6, -1, -1, -1, const <int>[25],
            const prefix0.Reflect(), const <Object>[]),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 21, -1, -1, 95),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 21, -1, -1, 96),
        new r.MethodMirrorImpl(r"", 64, 7, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflect(), 22, -1, -1, 98),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflect(), 22, -1, -1, 99),
        new r.MethodMirrorImpl(r"", 64, 8, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflect(), 23, -1, -1, 101),
        new r.MethodMirrorImpl(r"", 64, 9, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflect(), 24, -1, -1, 103),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflect(), 24, -1, -1, 104),
        new r.MethodMirrorImpl(r"", 64, 10, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflect(), 25, -1, -1, 106),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflect(), 25, -1, -1, 107),
        new r.MethodMirrorImpl(r"", 64, 11, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflect(), 26, -1, -1, 109),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflect(), 26, -1, -1, 110),
        new r.MethodMirrorImpl(r"", 64, 12, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflect(), 27, -1, -1, 112),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflect(), 27, -1, -1, 113),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflect(), 28, -1, -1, 114),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflect(), 28, -1, -1, 115),
        new r.MethodMirrorImpl(r"", 64, 13, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflect(), 29, -1, -1, 117),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflect(), 29, -1, -1, 118),
        new r.MethodMirrorImpl(r"", 64, 14, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflect(), 30, -1, -1, 120),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.Reflect(), 30, -1, -1, 121),
        new r.MethodMirrorImpl(r"", 64, 15, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"", 64, 16, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"", 64, 17, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"", 64, 18, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"", 64, 19, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"", 128, 20, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const <Object>[]),
        new r.MethodMirrorImpl(r"", 64, 22, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const []),
        new r.MethodMirrorImpl(r"", 64, 23, -1, -1, -1, const <int>[],
            const prefix0.Reflect(), const [])
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(r"other", 16390, 32, const prefix0.Reflect(),
            null, -1, -1, const <Object>[], null, null),
        new r.ParameterMirrorImpl(r"invocation", 32774, 34,
            const prefix0.Reflect(), -1, -1, -1, const <Object>[], null, null),
        new r.ParameterMirrorImpl(r"value", 32774, 38, const prefix0.Reflect(),
            3, -1, -1, const <Object>[], null, null),
        new r.ParameterMirrorImpl(r"_myInjectedValueHolder", 32870, 46,
            const prefix0.Reflect(), 6, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_myInjectedHelloValueHolder", 32870, 48,
            const prefix0.Reflect(), 6, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_myInjectedClazz", 32870, 50,
            const prefix0.Reflect(), 3, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_hasRunFirstMethod", 32870, 52,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_firstMethodWithParametersValue", 32870, 54,
            const prefix0.Reflect(), 3, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_postConstructOrder", 32870, 56,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_hasRunFirstPostConstructMethod", 32870, 58,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_firstPostConstructMethodOrder", 32870, 60,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_hasRunSecondPostConstructMethod", 32870,
            62, const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_secondPostConstructMethodOrder", 32870, 64,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_hasRunLastPostConstructMethod", 32870, 66,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_lastPostConstructMethodOrder", 32870, 68,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_preDestroyOrder", 32870, 70,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_hasRunFirstPreDestroyMethod", 32870, 72,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_firstPreDestroytMethodOrder", 32870, 74,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_hasRunSecondPreDestroyMethod", 32870, 76,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_secondPreDestroytMethodOrder", 32870, 78,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_hasRunLastPreDestroyMethod", 32870, 80,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_lastPreDestroytMethodOrder", 32870, 82,
            const prefix0.Reflect(), -1, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"value", 32774, 83, const prefix0.Reflect(),
            6, -1, -1, const <Object>[], null, null),
        new r.ParameterMirrorImpl(r"_injectedString", 32806, 88,
            const prefix0.Reflect(), 6, -1, -1, const <Object>[], null, null),
        new r.ParameterMirrorImpl(r"_valueHolder", 32870, 87,
            const prefix0.Reflect(), 6, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"value", 32774, 94, const prefix0.Reflect(),
            -1, -1, -1, const <Object>[], null, null),
        new r.ParameterMirrorImpl(r"_valueHolder", 32870, 96,
            const prefix0.Reflect(), 6, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_randomNumberHolder", 32870, 99,
            const prefix0.Reflect(), 9, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_interface", 32870, 104,
            const prefix0.Reflect(), 16, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_interface", 32870, 107,
            const prefix0.Reflect(), 16, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_interface", 32870, 110,
            const prefix0.Reflect(), 10, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_interface", 32870, 113,
            const prefix0.Reflect(), 16, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_interface2", 32870, 115,
            const prefix0.Reflect(), 17, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_complexClass", 32870, 118,
            const prefix0.Reflect(), 15, -1, -1, const [], null, null),
        new r.ParameterMirrorImpl(r"_injectedClazz", 32870, 121,
            const prefix0.Reflect(), 3, -1, -1, const [], null, null)
      ],
      <Type>[
        prefix1.AbstractClazz,
        prefix1.Clazz,
        prefix1.ClazzTwo,
        prefix1.InjectedClazz,
        prefix1.InterfaceClazz,
        prefix1.MixinClazz,
        prefix1.ValueHolder,
        prefix1.ValueHolderInjectee,
        prefix1.RandomNumberInjectee,
        prefix1.RandomNumberHolder,
        prefix1.InterfaceInjectee,
        prefix1.NamedInterfaceInjectee,
        prefix1.RecursiveInterfaceInjectee,
        prefix1.MultipleSingletonsOfSameClassInjectee,
        prefix1.ComplexClassInjectee,
        prefix1.ComplexClass,
        prefix1.Interface,
        prefix1.Interface2,
        prefix1.ImplementationOfInterface,
        prefix1.SuperClazz,
        Object,
        const r.FakeType(r"..AbstractClazz with .MixinClazz"),
        prefix1.BaseClazz,
        prefix1.AbstractBaseClazz
      ],
      24,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"firstMethod": (dynamic instance) => instance.firstMethod,
        r"firstMethodWithParameters": (dynamic instance) =>
            instance.firstMethodWithParameters,
        r"firstPostConstructMethod": (dynamic instance) =>
            instance.firstPostConstructMethod,
        r"secondPostConstructMethod": (dynamic instance) =>
            instance.secondPostConstructMethod,
        r"lastPostConstructMethod": (dynamic instance) =>
            instance.lastPostConstructMethod,
        r"firstPreDestroyMethod": (dynamic instance) =>
            instance.firstPreDestroyMethod,
        r"secondPreDestroyMethod": (dynamic instance) =>
            instance.secondPreDestroyMethod,
        r"lastPreDestroyMethod": (dynamic instance) =>
            instance.lastPreDestroyMethod,
        r"myInjectedValueHolder": (dynamic instance) =>
            instance.myInjectedValueHolder,
        r"myInjectedHelloValueHolder": (dynamic instance) =>
            instance.myInjectedHelloValueHolder,
        r"myInjectedClazz": (dynamic instance) => instance.myInjectedClazz,
        r"hasRunFirstMethod": (dynamic instance) => instance.hasRunFirstMethod,
        r"firstMethodWithParametersValue": (dynamic instance) =>
            instance.firstMethodWithParametersValue,
        r"postConstructOrder": (dynamic instance) =>
            instance.postConstructOrder,
        r"hasRunFirstPostConstructMethod": (dynamic instance) =>
            instance.hasRunFirstPostConstructMethod,
        r"firstPostConstructMethodOrder": (dynamic instance) =>
            instance.firstPostConstructMethodOrder,
        r"hasRunSecondPostConstructMethod": (dynamic instance) =>
            instance.hasRunSecondPostConstructMethod,
        r"secondPostConstructMethodOrder": (dynamic instance) =>
            instance.secondPostConstructMethodOrder,
        r"hasRunLastPostConstructMethod": (dynamic instance) =>
            instance.hasRunLastPostConstructMethod,
        r"lastPostConstructMethodOrder": (dynamic instance) =>
            instance.lastPostConstructMethodOrder,
        r"preDestroyOrder": (dynamic instance) => instance.preDestroyOrder,
        r"hasRunFirstPreDestroyMethod": (dynamic instance) =>
            instance.hasRunFirstPreDestroyMethod,
        r"firstPreDestroytMethodOrder": (dynamic instance) =>
            instance.firstPreDestroytMethodOrder,
        r"hasRunSecondPreDestroyMethod": (dynamic instance) =>
            instance.hasRunSecondPreDestroyMethod,
        r"secondPreDestroytMethodOrder": (dynamic instance) =>
            instance.secondPreDestroytMethodOrder,
        r"hasRunLastPreDestroyMethod": (dynamic instance) =>
            instance.hasRunLastPreDestroyMethod,
        r"lastPreDestroytMethodOrder": (dynamic instance) =>
            instance.lastPreDestroytMethodOrder,
        r"mySetterInjectedValueHolder": (dynamic instance) =>
            instance.mySetterInjectedValueHolder,
        r"valueHolder": (dynamic instance) => instance.valueHolder,
        r"value": (dynamic instance) => instance.value,
        r"randomNumberHolder": (dynamic instance) =>
            instance.randomNumberHolder,
        r"randomNumber": (dynamic instance) => instance.randomNumber,
        r"interface": (dynamic instance) => instance.interface,
        r"interface2": (dynamic instance) => instance.interface2,
        r"complexClass": (dynamic instance) => instance.complexClass,
        r"injectedClazz": (dynamic instance) => instance.injectedClazz
      },
      {
        r"myInjectedValueHolder=": (dynamic instance, value) =>
            instance.myInjectedValueHolder = value,
        r"myInjectedHelloValueHolder=": (dynamic instance, value) =>
            instance.myInjectedHelloValueHolder = value,
        r"myInjectedClazz=": (dynamic instance, value) =>
            instance.myInjectedClazz = value,
        r"hasRunFirstMethod=": (dynamic instance, value) =>
            instance.hasRunFirstMethod = value,
        r"firstMethodWithParametersValue=": (dynamic instance, value) =>
            instance.firstMethodWithParametersValue = value,
        r"postConstructOrder=": (dynamic instance, value) =>
            instance.postConstructOrder = value,
        r"hasRunFirstPostConstructMethod=": (dynamic instance, value) =>
            instance.hasRunFirstPostConstructMethod = value,
        r"firstPostConstructMethodOrder=": (dynamic instance, value) =>
            instance.firstPostConstructMethodOrder = value,
        r"hasRunSecondPostConstructMethod=": (dynamic instance, value) =>
            instance.hasRunSecondPostConstructMethod = value,
        r"secondPostConstructMethodOrder=": (dynamic instance, value) =>
            instance.secondPostConstructMethodOrder = value,
        r"hasRunLastPostConstructMethod=": (dynamic instance, value) =>
            instance.hasRunLastPostConstructMethod = value,
        r"lastPostConstructMethodOrder=": (dynamic instance, value) =>
            instance.lastPostConstructMethodOrder = value,
        r"preDestroyOrder=": (dynamic instance, value) =>
            instance.preDestroyOrder = value,
        r"hasRunFirstPreDestroyMethod=": (dynamic instance, value) =>
            instance.hasRunFirstPreDestroyMethod = value,
        r"firstPreDestroytMethodOrder=": (dynamic instance, value) =>
            instance.firstPreDestroytMethodOrder = value,
        r"hasRunSecondPreDestroyMethod=": (dynamic instance, value) =>
            instance.hasRunSecondPreDestroyMethod = value,
        r"secondPreDestroytMethodOrder=": (dynamic instance, value) =>
            instance.secondPreDestroytMethodOrder = value,
        r"hasRunLastPreDestroyMethod=": (dynamic instance, value) =>
            instance.hasRunLastPreDestroyMethod = value,
        r"lastPreDestroytMethodOrder=": (dynamic instance, value) =>
            instance.lastPreDestroytMethodOrder = value,
        r"mySetterInjectedValueHolder=": (dynamic instance, value) =>
            instance.mySetterInjectedValueHolder = value,
        r"valueHolder=": (dynamic instance, value) =>
            instance.valueHolder = value,
        r"randomNumberHolder=": (dynamic instance, value) =>
            instance.randomNumberHolder = value,
        r"interface=": (dynamic instance, value) => instance.interface = value,
        r"interface2=": (dynamic instance, value) =>
            instance.interface2 = value,
        r"complexClass=": (dynamic instance, value) =>
            instance.complexClass = value,
        r"injectedClazz=": (dynamic instance, value) =>
            instance.injectedClazz = value
      },
      <m.LibraryMirror>[
        new r.LibraryMirrorImpl(r"", Uri.parse(r"reflectable://0/"),
            const prefix0.Reflect(), const <int>[], {}, {}, const [], null),
        new r.LibraryMirrorImpl(
            r"dart.core",
            Uri.parse(r"reflectable://1/dart.core"),
            const prefix0.Reflect(),
            const <int>[],
            {},
            {},
            const <Object>[],
            null)
      ],
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
